"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/diagnosis",{

/***/ "./src/services/ml.js":
/*!****************************!*\
  !*** ./src/services/ml.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mlService: function() { return /* binding */ mlService; }\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs */ \"./node_modules/@tensorflow/tfjs/dist/index.js\");\n\nclass MLService {\n    async loadModel() {\n        try {\n            this.model = await _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_0__.loadGraphModel(\"/modeljs/model.json\");\n            this.isModelLoaded = true;\n            console.log(\"Graph Model loaded successfully\");\n        } catch (error) {\n            console.error(\"Error loading model:\", error);\n            console.error(\"Error name:\", error.name);\n            console.error(\"Error message:\", error.message);\n            console.error(\"Error stack:\", error.stack);\n            throw error;\n        }\n    }\n    async preprocessImage(imageElement) {\n        // Convert image to tensor\n        const tensor = _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_0__.browser.fromPixels(imageElement);\n        // Resize image to match model input size\n        const resized = _tensorflow_tfjs__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(tensor, [\n            300,\n            300\n        ]);\n        // Bỏ qua bước chuẩn hóa\n        // const normalized = resized.div(255.0);\n        // Add batch dimension\n        // const batched = normalized.expandDims(0);\n        const batched = resized.expandDims(0); // Sử dụng resized trực tiếp nếu không chuẩn hóa\n        // Clean up tensors\n        tensor.dispose();\n        // resized.dispose(); // Không dispose resized nếu nó là output\n        // normalized.dispose();\n        return batched;\n    }\n    async predict(imageElement) {\n        if (!this.isModelLoaded) {\n            await this.loadModel();\n        }\n        try {\n            // Preprocess image\n            const preprocessed = await this.preprocessImage(imageElement);\n            // Get prediction\n            const prediction = await this.model.predict(preprocessed);\n            // Get class with highest probability\n            const probabilities = await prediction.data();\n            const maxIndex = probabilities.indexOf(Math.max(...probabilities));\n            // Clean up tensors\n            preprocessed.dispose();\n            prediction.dispose();\n            //\n            const classes = [\n                \"Black Rot\",\n                \"frog_eye_leaf_spot\",\n                \"healthy\",\n                \"powdery_mildew\",\n                \"rust\",\n                \"scab\"\n            ];\n            return {\n                disease: classes[maxIndex],\n                confidence: probabilities[maxIndex],\n                treatment: this.getTreatment(classes[maxIndex]),\n                prevention: this.getPrevention(classes[maxIndex])\n            };\n        } catch (error) {\n            console.error(\"Error during prediction:\", error);\n            throw error;\n        }\n    }\n    getTreatment(disease) {\n        //\n        const treatments = {\n            \"Black Rot\": \"\\n- Biện ph\\xe1p canh t\\xe1c:\\n  + Cắt bỏ v\\xe0 ti\\xeau hủy ngay lập tức c\\xe1c c\\xe0nh, l\\xe1, v\\xe0 quả bị nhiễm bệnh để giảm nguồn l\\xe2y lan.\\n  + Loại bỏ c\\xe1c quả kh\\xf4 (x\\xe1c quả) c\\xf2n s\\xf3t lại tr\\xean c\\xe2y từ vụ trước v\\xec đ\\xe2y l\\xe0 nguồn bệnh ch\\xednh.\\n- Biện ph\\xe1p h\\xf3a học:\\n  + Phun thuốc trừ nấm gốc đồng (Bordeaux, Copper Oxychloride) v\\xe0o giai đoạn c\\xe2y ngủ đ\\xf4ng.\\n  + Trong m\\xf9a sinh trưởng, sử dụng c\\xe1c loại thuốc như Captan, Mancozeb, Myclobutanil hoặc Thiophanate-methyl. Tu\\xe2n thủ lịch phun v\\xe0 liều lượng theo khuyến c\\xe1o.\",\n            \"frog_eye_leaf_spot\": \"\\n- Biện ph\\xe1p canh t\\xe1c:\\n  + Vệ sinh vườn: Thu gom v\\xe0 ti\\xeau hủy to\\xe0n bộ l\\xe1 rụng v\\xe0o cuối m\\xf9a vụ.\\n  + Cắt tỉa: Tạo t\\xe1n c\\xe2y th\\xf4ng tho\\xe1ng, loại bỏ c\\xe1c c\\xe0nh l\\xe1 rậm rạp để giảm độ ẩm v\\xe0 tăng cường lưu th\\xf4ng kh\\xf4ng kh\\xed.\\n- Biện ph\\xe1p h\\xf3a học:\\n  + Sử dụng c\\xe1c loại thuốc trừ nấm chứa hoạt chất như Mancozeb, Captan, hoặc c\\xe1c loại thuốc nh\\xf3m Strobilurin (v\\xed dụ: Trifloxystrobin). Phun khi c\\xe1c triệu chứng đầu ti\\xean xuất hiện v\\xe0 lặp lại theo chu kỳ 10-14 ng\\xe0y.\",\n            \"healthy\": \"C\\xe2y khỏe mạnh, kh\\xf4ng cần điều trị. Duy tr\\xec chế độ chăm s\\xf3c tốt, tưới nước v\\xe0 b\\xf3n ph\\xe2n định kỳ để c\\xe2y ph\\xe1t triển tối ưu.\",\n            \"powdery_mildew\": \"\\n- Biện ph\\xe1p canh t\\xe1c:\\n  + Chọn giống kh\\xe1ng bệnh nếu c\\xf3 thể.\\n  + Cắt tỉa v\\xe0 ti\\xeau hủy c\\xe1c chồi hoặc c\\xe0nh bị nhiễm bệnh nặng v\\xe0o đầu m\\xf9a.\\n  + Trồng c\\xe2y ở nơi c\\xf3 \\xe1nh s\\xe1ng mặt trời đầy đủ v\\xe0 th\\xf4ng tho\\xe1ng.\\n- Biện ph\\xe1p h\\xf3a học:\\n  + Phun dầu kho\\xe1ng hoặc dầu neem v\\xe0o giai đoạn sớm để ngăn chặn sự ph\\xe1t triển của nấm.\\n  + Sử dụng c\\xe1c loại thuốc trừ nấm chuy\\xean trị như Myclobutanil, Fenarimol, hoặc c\\xe1c thuốc gốc Lưu huỳnh. Phun lu\\xe2n phi\\xean c\\xe1c loại thuốc để tr\\xe1nh kh\\xe1ng thuốc.\",\n            \"rust\": \"\\n- Biện ph\\xe1p canh t\\xe1c (Rất quan trọng):\\n  + Loại bỏ k\\xfd chủ phụ: Kh\\xf4ng trồng t\\xe1o gần c\\xe1c loại c\\xe2y b\\xe1ch x\\xf9 (Juniperus) v\\xec nấm gỉ sắt cần cả hai k\\xfd chủ để ho\\xe0n th\\xe0nh v\\xf2ng đời. Nếu c\\xf3, h\\xe3y loại bỏ hoặc kiểm tra v\\xe0 cắt bỏ c\\xe1c u bệnh tr\\xean c\\xe2y b\\xe1ch x\\xf9.\\n  + Cắt bỏ v\\xe0 ti\\xeau hủy l\\xe1, c\\xe0nh c\\xf3 triệu chứng bệnh.\\n- Biện ph\\xe1p h\\xf3a học:\\n  + Phun thuốc ph\\xf2ng ngừa từ khi nụ hoa bắt đầu nở. Sử dụng c\\xe1c hoạt chất như Myclobutanil, Fenarimol, hoặc Mancozeb.\",\n            \"scab\": \"\\n- Biện ph\\xe1p canh t\\xe1c:\\n  + Vệ sinh: Ti\\xeau hủy l\\xe1 rụng l\\xe0 biện ph\\xe1p quan trọng h\\xe0ng đầu. C\\xf3 thể c\\xe0o v\\xe0 đốt, hoặc d\\xf9ng m\\xe1y cắt cỏ c\\xf3 t\\xfai gom để nghiền n\\xe1t l\\xe1, hoặc phun ur\\xea 5% l\\xean l\\xe1 rụng để đẩy nhanh qu\\xe1 tr\\xecnh ph\\xe2n hủy.\\n- Chọn giống: Lu\\xf4n ưu ti\\xean c\\xe1c giống kh\\xe1ng bệnh ghẻ khi trồng mới.\\n- Tưới ti\\xeau: Tr\\xe1nh tưới nước l\\xean l\\xe1. Sử dụng hệ thống tưới nhỏ giọt.\\n- Lịch phun thuốc: Theo d\\xf5i dự b\\xe1o thời tiết v\\xe0 phun thuốc ph\\xf2ng ngừa trước c\\xe1c đợt mưa k\\xe9o d\\xe0i trong m\\xf9a xu\\xe2n.\"\n        };\n        return treatments[disease] || \"Hiện chưa c\\xf3 th\\xf4ng tin điều trị chi tiết cho bệnh n\\xe0y. Vui l\\xf2ng tham khảo \\xfd kiến chuy\\xean gia n\\xf4ng nghiệp.\";\n    }\n    getPrevention(disease) {\n        // TODO: Thay thế bằng dữ liệu thực tế\n        const preventions = {\n            \"Black Rot\": \"\\n- Vệ sinh vườn: Đ\\xe2y l\\xe0 biện ph\\xe1p quan trọng nhất. Loại bỏ ho\\xe0n to\\xe0n c\\xe1c quả kh\\xf4 c\\xf2n treo tr\\xean c\\xe2y v\\xe0 quả rụng dưới đất. Cắt bỏ c\\xe1c c\\xe0nh kh\\xf4, c\\xe0nh chết v\\xe0 c\\xe1c vết lo\\xe9t tr\\xean th\\xe2n c\\xe2y.\\n- Cắt tỉa: Duy tr\\xec t\\xe1n c\\xe2y th\\xf4ng tho\\xe1ng để giảm độ ẩm v\\xe0 gi\\xfap thuốc phun phủ đều.\\n- Quản l\\xfd c\\xf4n tr\\xf9ng v\\xe0 tổn thương: Tr\\xe1nh g\\xe2y ra c\\xe1c vết thương kh\\xf4ng cần thiết tr\\xean vỏ c\\xe2y. Kiểm so\\xe1t c\\xf4n tr\\xf9ng g\\xe2y hại c\\xf3 thể tạo đường v\\xe0o cho nấm.\\n- B\\xf3n ph\\xe2n c\\xe2n đối: C\\xe2y khỏe mạnh c\\xf3 khả năng chống chịu bệnh tốt hơn.\",\n            \"frog_eye_leaf_spot\": \"\\n- Vệ sinh: Thu gom v\\xe0 đốt hoặc ủ ch\\xf4n l\\xe1 rụng v\\xe0o m\\xf9a thu để ti\\xeau diệt nguồn bệnh tr\\xfa đ\\xf4ng.\\n- Cắt tỉa: H\\xe0ng năm, cắt tỉa c\\xe0nh để cải thiện luồng kh\\xf4ng kh\\xed v\\xe0 sự x\\xe2m nhập của \\xe1nh s\\xe1ng v\\xe0o t\\xe1n c\\xe2y.\\n- B\\xf3n ph\\xe2n: Tr\\xe1nh b\\xf3n thừa đạm v\\xec sẽ l\\xe0m l\\xe1 non ph\\xe1t triển qu\\xe1 mức, dễ bị nhiễm bệnh hơn. B\\xf3n ph\\xe2n c\\xe2n đối N-P-K.\",\n            \"healthy\": \"Duy tr\\xec lịch tưới nước v\\xe0 b\\xf3n ph\\xe2n đều đặn. Thường xuy\\xean kiểm tra c\\xe2y để ph\\xe1t hiện sớm c\\xe1c dấu hiệu bất thường. Cắt tỉa c\\xe0nh l\\xe1 đ\\xfang kỹ thuật để c\\xe2y th\\xf4ng tho\\xe1ng.\",\n            \"powdery_mildew\": \"\\n- Chọn giống: Lựa chọn c\\xe1c giống t\\xe1o c\\xf3 khả năng kh\\xe1ng bệnh phấn trắng.\\n- Vị tr\\xed trồng: Đảm bảo c\\xe2y được trồng ở nơi c\\xf3 đủ \\xe1nh s\\xe1ng mặt trời v\\xe0 kh\\xf4ng kh\\xed lưu th\\xf4ng tốt.\\n- Cắt tỉa: Loại bỏ c\\xe1c chồi non bị nhiễm bệnh ngay khi ch\\xfang xuất hiện v\\xe0o m\\xf9a xu\\xe2n.\\n- Tưới nước: Tưới nước v\\xe0o gốc c\\xe2y, tr\\xe1nh l\\xe0m ướt l\\xe1, đặc biệt l\\xe0 v\\xe0o buổi chiều tối v\\xec độ ẩm cao v\\xe0o ban đ\\xeam tạo điều kiện cho nấm ph\\xe1t triển.\",\n            \"rust\": \"\\n- Loại bỏ k\\xfd chủ phụ: Biện ph\\xe1p hiệu quả nhất l\\xe0 loại bỏ tất cả c\\xe1c c\\xe2y thuộc chi B\\xe1ch x\\xf9 (Juniperus) trong b\\xe1n k\\xednh \\xedt nhất 1-2 km. Nếu kh\\xf4ng thể, h\\xe3y thường xuy\\xean kiểm tra c\\xe2y b\\xe1ch x\\xf9 v\\xe0o m\\xf9a xu\\xe2n v\\xe0 cắt bỏ c\\xe1c t\\xfai b\\xe0o tử m\\xe0u cam.\\n- Chọn giống: Một số giống t\\xe1o c\\xf3 khả năng kh\\xe1ng bệnh gỉ sắt tốt hơn c\\xe1c giống kh\\xe1c.\\n- Phun thuốc ph\\xf2ng ngừa: Nếu bệnh thường xuy\\xean xảy ra, c\\xf3 thể phun thuốc trừ nấm v\\xe0o giai đoạn hoa nở để bảo vệ c\\xe2y.\",\n            \"scab\": \"\\n- Vệ sinh: Ti\\xeau hủy l\\xe1 rụng l\\xe0 biện ph\\xe1p quan trọng h\\xe0ng đầu. C\\xf3 thể c\\xe0o v\\xe0 đốt, hoặc d\\xf9ng m\\xe1y cắt cỏ c\\xf3 t\\xfai gom để nghiền n\\xe1t l\\xe1, hoặc phun ur\\xea 5% l\\xean l\\xe1 rụng để đẩy nhanh qu\\xe1 tr\\xecnh ph\\xe2n hủy.\\n- Chọn giống: Lu\\xf4n ưu ti\\xean c\\xe1c giống kh\\xe1ng bệnh ghẻ khi trồng mới.\\n- Tưới ti\\xeau: Tr\\xe1nh tưới nước l\\xean l\\xe1. Sử dụng hệ thống tưới nhỏ giọt.\\n- Lịch phun thuốc: Theo d\\xf5i dự b\\xe1o thời tiết v\\xe0 phun thuốc ph\\xf2ng ngừa trước c\\xe1c đợt mưa k\\xe9o d\\xe0i trong m\\xf9a xu\\xe2n.\"\n        };\n        return preventions[disease] || \"Hiện chưa c\\xf3 th\\xf4ng tin ph\\xf2ng ngừa chi tiết cho bệnh n\\xe0y. Vui l\\xf2ng tham khảo \\xfd kiến chuy\\xean gia n\\xf4ng nghiệp.\";\n    }\n    constructor(){\n        this.model = null;\n        this.isModelLoaded = false;\n    }\n}\nconst mlService = new MLService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/ml.js\n"));

/***/ })

});